{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["counter","desc","a","b","orderBy","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","_this","props","onRequestSort","_this2","this","_this$props","order","onSelectAllClick","numSelected","rowCount","react_default","createElement","TableHead_default","TableRow_default","TableCell_default","map","row","i","key","padding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","Component","EnhancedTableToolbar","classes","Toolbar_default","className","classNames","root","Object","defineProperty","highlight","Typography_default","color","variant","spacer","withStyles","theme","paddingRight","spacing","unit","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","actions","EnhancedTable","state","selected","coinData","data","page","rowsPerPage","handleRequestSort","_this3","setState","handleSelectAllClick","handleClick","handleChangePage","handleChangeRowsPerPage","target","value","isSelected","indexOf","_this4","fetch","then","res","json","values","el","name","symbol","market_cap","quotes","USD","price","Number","toFixed","circulating_supply","volume_24","volume_24h","percent_change_1h","percent_change_24h","percent_change_7d","_this5","_this$state","emptyRows","Math","min","length","Paper_default","App_EnhancedTableToolbar","tableWrapper","Table_default","table","aria-labelledby","App_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","index","sort","stableSort","getSorting","slice","n","hover","aria-checked","role","tabIndex","component","scope","style","height","colSpan","TablePagination_default","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","marginTop","minWidth","overflowX","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4fef67f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n/*eslint no-unused-vars: [\"off\", { \"args\": \"all\" }]*/\n\nlet counter = 0;\nfunction createData (\n  name,\n  symbol,\n  market_cap,\n  price,\n  circulating_supply,\n  volume_24,\n  percent_change_1h,\n  percent_change_24h,\n  percent_change_7d,\n) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    symbol,\n    market_cap,\n    price,\n    circulating_supply,\n    volume_24,\n    percent_change_1h,\n    percent_change_24h,\n    percent_change_7d,\n  };\n}\nfunction desc (a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort (array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting (order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'symbol', numeric: false, disablePadding: true, label: 'Symbol' },\n  { id: 'market_cap', numeric: true, disablePadding: false, label: 'Market Cap' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price' },\n  { id: 'circulating_supply', numeric: true, disablePadding: false, label: 'Circulating Supply' },\n  { id: 'volume_24', numeric: true, disablePadding: false, label: 'Volume (24h)' },\n  { id: 'percent_change_1h', numeric: true, disablePadding: false, label: '% 1h' },\n  { id: 'percent_change_24h', numeric: true, disablePadding: false, label: '% 24h' },\n  { id: 'percent_change_7d', numeric: true, disablePadding: false, label: '% 7d ' },\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = (property) => (event) => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render () {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell />\n          {rows.map((row, i) => {\n            return (\n              <TableCell\n                key={row.id}\n                numeric={row.numeric}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title='Sort'\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = (theme) => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = (props) => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='title'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='title' id='tableTitle'>\n            DATA\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = (theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass EnhancedTable extends React.Component {\n  componentDidMount () {\n    const URL = 'https://api.coinmarketcap.com/v2/ticker/';\n    fetch(URL).then((res) => res.json()).then((json) => {\n      this.setState({\n        data: Object.values(json.data).map((el, i) => {\n          return createData(\n            el.name,\n            el.symbol,\n            el.quotes.USD.market_cap,\n            Number(el.quotes.USD.price.toFixed(3)),\n            el.circulating_supply,\n            el.quotes.USD.volume_24h,\n            el.quotes.USD.percent_change_1h,\n            el.quotes.USD.percent_change_24h,\n            el.quotes.USD.percent_change_7d,\n          );\n        }),\n      });\n    });\n  }\n  state = {\n    order: 'asc',\n    orderBy: 'id',\n    selected: [],\n    coinData: null,\n    data: [],\n    page: 1,\n    rowsPerPage: 100,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = (event) => {\n    return;\n  };\n\n  handleClick = (event, id) => {\n    return;\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = (id) => this.state.selected.indexOf(id) !== -1;\n\n  render () {\n    const { classes } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page, coinData } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby='tableTitle'>\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((n) => {\n                  const isSelected = this.isSelected(n.id);\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => this.handleClick(event, n.id)}\n                      aria-checked={isSelected}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                    >\n                      <TableCell />\n                      <TableCell component='th' scope='row' padding='none'>\n                        {n.name}\n                      </TableCell>\n                      <TableCell>{n.symbol}</TableCell>\n                      <TableCell numeric>{n.market_cap}</TableCell>\n                      <TableCell numeric>{n.price}</TableCell>\n                      <TableCell numeric>{n.circulating_supply}</TableCell>\n                      <TableCell numeric>{n.volume_24}</TableCell>\n                      <TableCell numeric>{n.percent_change_1h}</TableCell>\n                      <TableCell numeric>{n.percent_change_24h}</TableCell>\n                      <TableCell numeric>{n.percent_change_7d}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          component='div'\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}